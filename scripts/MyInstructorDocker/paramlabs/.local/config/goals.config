# goals.config
# 
# description: * this configuration file is read by GoalsParser.py
#              * comment line starts with '#' and will be skipped
#              * empty line will be ignored
#
# entry format
# <id> = <type> : <operator> : <tag1> : <tag2>
#
# <id> - must be alphanumeric (id of the goal)
# <type> - must be either:
#          'matchanyany' - if any tag1 matches any tag2
#          'matchoneany' - if the first tag1 matches any tag2
#          'matchonelast' - if the first tag1 matches the last tag2
#
# <operator> - must be either:
#              'string_equal' - treat values correspond to <tag1> and <tag2>
#                      as string and success means they are equal
#              'string_diff' - treat values correspond to <tag1> and <tag2>
#                      as string and success means they are not equal
#              'integer_equal' - treat values correspond to <tag1> and <tag2>
#                      as integer and success means they are equal
#              'integer_greater' - treat values correspond to <tag1> and <tag2>
#                      as integer and success means tag1 value > tag2 value
#              'integer_lessthan' - treat values correspond to <tag1> and <tag2>
#                      as integer and success means tag1 value < tag2 value
#              
# <tag1> should be looked at as the 'Answer' side - but we allow looking up the
#        answer from the 'Result' also, thus <tag1> must be either:
#                   <string> - alphanumeric string - default to look up in 'Result'
#                   'answer'.<string> - corresponding tag is looked up in 'Answer'
#                   'result'.<string> - corresponding tag is looked up in 'Result'
#        For <tag1>, 'answer=<string>' is allowed also
#                   'answer'=<string> - No lookup is done, just use the string
#                   as the answer. Store in JSON output file as 'answer=string'
# <tag2> should be looked at as the 'Result' side, thus <tag2> must be either:
#                   <string> - alphanumeric string - default to look up in 'Result'
#                   'result'.<string> - corresponding tag is looked up in 'Result'
#        Note: 'answer'.<string> and 'answer=<string>' is NOT allowed
#
# for example:
# crash : matchanyany : crashstring : inputstring
# means : for goal of 'crash', if any of the crashstring matches
#         any of the inputstring, it is considered successful
#

# The following are meant for format string vulnerability lab

crash = matchanyany : string_equal : answer.crashstring : inputdecimal

modifyvalue = matchoneany : string_equal : answer.newsecret1value : newsecret1value

modifyspecific = matchonelast : string_diff : answer=0x56 : newsecret1value

