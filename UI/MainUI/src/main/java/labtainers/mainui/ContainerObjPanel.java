/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package labtainers.mainui;

import java.awt.Component;
import java.awt.Dimension;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollBar;
import javax.swing.SwingUtilities;

/**
 *
 * @author Daniel Liao
 */
public class ContainerObjPanel extends javax.swing.JPanel {

    /**
     * Creates new form ContainerObjPanel
     */
    private MainWindow mainWindow;
    private LabData.ContainerData data;
    public ContainerObjPanel(MainWindow mainWindow, String name) {
        initComponents();
        this.mainWindow = mainWindow;
        this.containerAddHostScrollPaneBar = AddHostsScrollPane.getVerticalScrollBar();
        this.containerConfigNetworksScrollPaneBar = ContainerConfigNetworksScrollpane.getVerticalScrollBar();  
        this.data = new LabData.ContainerData(name);
                
        this.ContainerLabelName.setText(this.data.name);
        this.RenameContainerTextfield.setVisible(false);
    }
    
    public ContainerObjPanel(MainWindow mainWindow, LabData.ContainerData data){
        initComponents();
        this.mainWindow = mainWindow;
        this.containerAddHostScrollPaneBar = AddHostsScrollPane.getVerticalScrollBar();
        this.containerConfigNetworksScrollPaneBar = ContainerConfigNetworksScrollpane.getVerticalScrollBar();  
        this.data = data;
        
        this.ContainerLabelName.setText(this.data.name);
        this.RenameContainerTextfield.setVisible(false);
    }

    private void loadDataIntoContainerPanel(){
        this.ContainerConfigWindow.setTitle("Container Config: "+this.data.name);
        
        // General Tab
        this.UserTF.setText(data.user);
        this.PasswordTF.setText(data.password);
        this.TerminalQuantitySpinner.setValue(data.terminal_count);
        
            // list of add-hosts
        for(int i=0;i<data.listOfContainerAddHost.size();i++){
            addAddHostSubPanel(data.listOfContainerAddHost.get(i).type,        data.listOfContainerAddHost.get(i).add_host_host, 
                               data.listOfContainerAddHost.get(i).add_host_ip, data.listOfContainerAddHost.get(i).add_host_network);
        }
        
        // GNS3
        this.ThumbCommandTextfield.setText(data.thumb_command);
        this.ThumbStopTextfield.setText(data.thumb_stop);
        this.ThumbVolumeTextfield.setText(data.thumb_volume);
        this.HideCheckbox.setSelected(data.hide);
        
        // Docker
        this.ScriptTextfield.setText(data.script);
        this.RegistryTextfield.setText(data.registry);
        this.BaseRegistryTextfield.setText(data.base_registry);
        this.PublishTextfield.setText(data.publish);
        this.NoPrivilegeCheckbox.setSelected(data.no_privilege);
        
        // Other
        this.TerminalGroupTextfield.setText(data.terminal_group);
        this.XtermTitleTextfield.setText(data.xterm_title);
        this.XtermScriptTextfield.setText(data.xterm_script);
        this.ClonesSpinner.setValue(data.clone);
        this.X11Checkbox.setSelected(data.x11);
        this.NoPullCheckbox.setSelected(data.no_pull);
        this.MyStuffCheckbox.setSelected(data.mystuff);
        this.TapRadioButton.setSelected(data.tap);
        this.MountTextfield1.setText(data.mount1);
        this.MountTextfield2.setText(data.mount2);
        
        // Network
        this.LabGatewayTextfield.setText(data.lab_gateway);
        this.NoGWCheckbox.setSelected(data.no_gw);
        
        for(int i=0;i<data.listOfContainerNetworks.size();i++){
            addContainerNetworkSubPanel(data.listOfContainerNetworks.get(i).network_name, data.listOfContainerNetworks.get(i).network_ipaddress);
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ContainerConfigWindow = new javax.swing.JDialog();
        containerTabPane = new javax.swing.JTabbedPane();
        ContainerConfigGeneralTab = new javax.swing.JPanel();
        UserLabel = new javax.swing.JLabel();
        TerminalCountLabel = new javax.swing.JLabel();
        PasswordLabel = new javax.swing.JLabel();
        UserTF = new javax.swing.JTextField();
        PasswordTF = new javax.swing.JTextField();
        TerminalQuantitySpinner = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        TerminalGroupTextfield = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        LabGatewayTextfield = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        NoGWCheckbox = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        ContainerConfigNetworksAddButton = new javax.swing.JButton();
        ContainerConfigNetworksScrollpane = new javax.swing.JScrollPane();
        ContainerConfigNetworksPanel = new javax.swing.JPanel();
        ContainerConfigDockerTab = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        RegistryTextfield = new javax.swing.JTextField();
        ScriptTextfield = new javax.swing.JTextField();
        PublishTextfield = new javax.swing.JTextField();
        BaseRegistryTextfield = new javax.swing.JTextField();
        NoPrivilegeCheckbox = new javax.swing.JCheckBox();
        EditDockerfileButton = new javax.swing.JButton();
        ContainerConfigNetworkTab = new javax.swing.JPanel();
        AddHostsScrollPane = new javax.swing.JScrollPane();
        AddHostsSubPanel = new javax.swing.JPanel();
        AddHostLabel3 = new javax.swing.JLabel();
        ContainerConfigAddHostIPButton = new javax.swing.JButton();
        ContainerConfigAddHostNetworkButton = new javax.swing.JButton();
        ContainerConfigOtherTab = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        XtermTitleTextfield = new javax.swing.JTextField();
        XtermScriptTextfield = new javax.swing.JTextField();
        X11Checkbox = new javax.swing.JCheckBox();
        MyStuffCheckbox = new javax.swing.JCheckBox();
        NoPullCheckbox = new javax.swing.JCheckBox();
        ClonesSpinner = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        MountTextfield1 = new javax.swing.JTextField();
        MountTextfield2 = new javax.swing.JTextField();
        TapRadioButton = new javax.swing.JRadioButton();
        ContainerConfigGNS3Tab = new javax.swing.JPanel();
        ThumbVolumeLabel = new javax.swing.JLabel();
        HideLabel = new javax.swing.JLabel();
        ThumbCommandLabel = new javax.swing.JLabel();
        ThumbStopLabel = new javax.swing.JLabel();
        ThumbStopTextfield = new javax.swing.JTextField();
        ThumbVolumeTextfield = new javax.swing.JTextField();
        ThumbCommandTextfield = new javax.swing.JTextField();
        HideCheckbox = new javax.swing.JCheckBox();
        ContainerConfigUpdateButton = new javax.swing.JButton();
        ContainerConfigCancelButton = new javax.swing.JButton();
        ContainerRightClick = new javax.swing.JPopupMenu();
        renameContainerOption = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        deleteContainerOption = new javax.swing.JMenuItem();
        DockerfileEditorDialog = new javax.swing.JDialog();
        ContainerLabelName = new javax.swing.JLabel();
        RenameContainerTextfield = new javax.swing.JTextField();

        ContainerConfigWindow.setTitle("Container Configuration: ");
        ContainerConfigWindow.setMaximumSize(new java.awt.Dimension(601, 400));
        ContainerConfigWindow.setMinimumSize(new java.awt.Dimension(601, 400));
        ContainerConfigWindow.setPreferredSize(new java.awt.Dimension(601, 400));
        ContainerConfigWindow.setResizable(false);
        ContainerConfigWindow.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                ContainerConfigWindowWindowClosing(evt);
            }
        });

        containerTabPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        UserLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        UserLabel.setText("User:");

        TerminalCountLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        TerminalCountLabel.setText("Terminal Quantity: ");

        PasswordLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        PasswordLabel.setText("Password: ");

        UserTF.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        UserTF.setText("ubuntu");

        PasswordTF.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        PasswordTF.setText("ubuntu");

        TerminalQuantitySpinner.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TerminalQuantitySpinner.setModel(new javax.swing.SpinnerNumberModel(1, -1, null, 1));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setText("Terminal Group:");

        TerminalGroupTextfield.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel16.setText("Lab Gateway:");

        jLabel17.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel17.setText("NO_GW:");

        NoGWCheckbox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Networks:");

        ContainerConfigNetworksAddButton.setText("Add");
        ContainerConfigNetworksAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContainerConfigNetworksAddButtonActionPerformed(evt);
            }
        });

        ContainerConfigNetworksScrollpane.setMaximumSize(new java.awt.Dimension(541, 32767));
        ContainerConfigNetworksScrollpane.setMinimumSize(new java.awt.Dimension(541, 136));
        ContainerConfigNetworksScrollpane.setPreferredSize(new java.awt.Dimension(541, 136));

        ContainerConfigNetworksPanel.setMaximumSize(new java.awt.Dimension(541, 32767));
        ContainerConfigNetworksPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        ContainerConfigNetworksPanel.setPreferredSize(new java.awt.Dimension(0, 0));
        ContainerConfigNetworksScrollpane.setViewportView(ContainerConfigNetworksPanel);

        javax.swing.GroupLayout ContainerConfigGeneralTabLayout = new javax.swing.GroupLayout(ContainerConfigGeneralTab);
        ContainerConfigGeneralTab.setLayout(ContainerConfigGeneralTabLayout);
        ContainerConfigGeneralTabLayout.setHorizontalGroup(
            ContainerConfigGeneralTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerConfigGeneralTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ContainerConfigGeneralTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ContainerConfigGeneralTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ContainerConfigGeneralTabLayout.createSequentialGroup()
                            .addComponent(UserLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(UserTF, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(PasswordLabel)
                            .addGap(3, 3, 3)
                            .addComponent(PasswordTF, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(ContainerConfigGeneralTabLayout.createSequentialGroup()
                            .addGroup(ContainerConfigGeneralTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(ContainerConfigGeneralTabLayout.createSequentialGroup()
                                    .addComponent(TerminalCountLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(TerminalQuantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel15))
                                .addGroup(ContainerConfigGeneralTabLayout.createSequentialGroup()
                                    .addComponent(jLabel16)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(LabGatewayTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(ContainerConfigGeneralTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(ContainerConfigGeneralTabLayout.createSequentialGroup()
                                    .addGap(9, 9, 9)
                                    .addComponent(jLabel17)
                                    .addGap(3, 3, 3)
                                    .addComponent(NoGWCheckbox))
                                .addComponent(TerminalGroupTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(ContainerConfigGeneralTabLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ContainerConfigNetworksAddButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(ContainerConfigGeneralTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ContainerConfigGeneralTabLayout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addComponent(ContainerConfigNetworksScrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(26, Short.MAX_VALUE)))
        );
        ContainerConfigGeneralTabLayout.setVerticalGroup(
            ContainerConfigGeneralTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerConfigGeneralTabLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(ContainerConfigGeneralTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserLabel)
                    .addComponent(UserTF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PasswordTF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PasswordLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ContainerConfigGeneralTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TerminalCountLabel)
                    .addComponent(TerminalQuantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(TerminalGroupTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ContainerConfigGeneralTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ContainerConfigGeneralTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(LabGatewayTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16)
                        .addComponent(jLabel17))
                    .addComponent(NoGWCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ContainerConfigGeneralTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ContainerConfigNetworksAddButton))
                .addContainerGap(119, Short.MAX_VALUE))
            .addGroup(ContainerConfigGeneralTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ContainerConfigGeneralTabLayout.createSequentialGroup()
                    .addGap(184, 184, 184)
                    .addComponent(ContainerConfigNetworksScrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 94, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        containerTabPane.addTab("General ", ContainerConfigGeneralTab);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Script:");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Base Registry:");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Registry:");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("No Privilege:");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Publish:");

        RegistryTextfield.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        ScriptTextfield.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        PublishTextfield.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        BaseRegistryTextfield.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        EditDockerfileButton.setText("Edit Dockerfile");
        EditDockerfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditDockerfileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ContainerConfigDockerTabLayout = new javax.swing.GroupLayout(ContainerConfigDockerTab);
        ContainerConfigDockerTab.setLayout(ContainerConfigDockerTabLayout);
        ContainerConfigDockerTabLayout.setHorizontalGroup(
            ContainerConfigDockerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerConfigDockerTabLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(ContainerConfigDockerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ContainerConfigDockerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ContainerConfigDockerTabLayout.createSequentialGroup()
                        .addComponent(ScriptTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                        .addComponent(EditDockerfileButton))
                    .addGroup(ContainerConfigDockerTabLayout.createSequentialGroup()
                        .addGroup(ContainerConfigDockerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PublishTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BaseRegistryTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RegistryTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NoPrivilegeCheckbox))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        ContainerConfigDockerTabLayout.setVerticalGroup(
            ContainerConfigDockerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerConfigDockerTabLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(ContainerConfigDockerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ScriptTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(EditDockerfileButton))
                .addGap(12, 12, 12)
                .addGroup(ContainerConfigDockerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegistryTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ContainerConfigDockerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BaseRegistryTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ContainerConfigDockerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PublishTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(ContainerConfigDockerTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(NoPrivilegeCheckbox))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        containerTabPane.addTab("Docker", ContainerConfigDockerTab);

        AddHostsScrollPane.setMaximumSize(new java.awt.Dimension(548, 32767));
        AddHostsScrollPane.setMinimumSize(new java.awt.Dimension(548, 19));
        AddHostsScrollPane.setPreferredSize(new java.awt.Dimension(548, 100));

        AddHostsSubPanel.setMaximumSize(new java.awt.Dimension(0, 0));
        AddHostsSubPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        AddHostsSubPanel.setPreferredSize(new java.awt.Dimension(0, 0));
        AddHostsScrollPane.setViewportView(AddHostsSubPanel);

        AddHostLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        AddHostLabel3.setText("Add-Hosts:");

        ContainerConfigAddHostIPButton.setText("Add Host:IP");
        ContainerConfigAddHostIPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContainerConfigAddHostIPButtonActionPerformed(evt);
            }
        });

        ContainerConfigAddHostNetworkButton.setText("Add Network");
        ContainerConfigAddHostNetworkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContainerConfigAddHostNetworkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ContainerConfigNetworkTabLayout = new javax.swing.GroupLayout(ContainerConfigNetworkTab);
        ContainerConfigNetworkTab.setLayout(ContainerConfigNetworkTabLayout);
        ContainerConfigNetworkTabLayout.setHorizontalGroup(
            ContainerConfigNetworkTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerConfigNetworkTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ContainerConfigNetworkTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddHostsScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                    .addGroup(ContainerConfigNetworkTabLayout.createSequentialGroup()
                        .addComponent(AddHostLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ContainerConfigAddHostIPButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ContainerConfigAddHostNetworkButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        ContainerConfigNetworkTabLayout.setVerticalGroup(
            ContainerConfigNetworkTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ContainerConfigNetworkTabLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(ContainerConfigNetworkTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddHostLabel3)
                    .addComponent(ContainerConfigAddHostIPButton)
                    .addComponent(ContainerConfigAddHostNetworkButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddHostsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                .addContainerGap())
        );

        containerTabPane.addTab("Hosts", ContainerConfigNetworkTab);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("Xterm:");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("X11:");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("# of Clones:");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("No Pull:");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("My Stuff:");

        XtermTitleTextfield.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        XtermScriptTextfield.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        ClonesSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        ClonesSpinner.setMinimumSize(new java.awt.Dimension(45, 20));
        ClonesSpinner.setPreferredSize(new java.awt.Dimension(45, 20));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("Mount:");

        MountTextfield1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        MountTextfield2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        TapRadioButton.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        TapRadioButton.setText("Tap");

        javax.swing.GroupLayout ContainerConfigOtherTabLayout = new javax.swing.GroupLayout(ContainerConfigOtherTab);
        ContainerConfigOtherTab.setLayout(ContainerConfigOtherTabLayout);
        ContainerConfigOtherTabLayout.setHorizontalGroup(
            ContainerConfigOtherTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerConfigOtherTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ContainerConfigOtherTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ContainerConfigOtherTabLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(XtermTitleTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(XtermScriptTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ContainerConfigOtherTabLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(4, 4, 4)
                        .addComponent(ClonesSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addGap(3, 3, 3)
                        .addComponent(X11Checkbox)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addGap(6, 6, 6)
                        .addComponent(NoPullCheckbox)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addGap(1, 1, 1)
                        .addComponent(MyStuffCheckbox))
                    .addGroup(ContainerConfigOtherTabLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MountTextfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MountTextfield2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(TapRadioButton))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        ContainerConfigOtherTabLayout.setVerticalGroup(
            ContainerConfigOtherTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerConfigOtherTabLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(ContainerConfigOtherTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(XtermTitleTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(XtermScriptTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ContainerConfigOtherTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(MountTextfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MountTextfield2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ContainerConfigOtherTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(X11Checkbox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ContainerConfigOtherTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(ClonesSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addComponent(NoPullCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MyStuffCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ContainerConfigOtherTabLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(ContainerConfigOtherTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TapRadioButton)
                .addContainerGap(108, Short.MAX_VALUE))
        );

        containerTabPane.addTab("Other", ContainerConfigOtherTab);

        ThumbVolumeLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ThumbVolumeLabel.setText("Thumb Volume:");

        HideLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        HideLabel.setText("Hide:");

        ThumbCommandLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ThumbCommandLabel.setText("Thumb Command:");

        ThumbStopLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ThumbStopLabel.setText("Thumb Stop:");

        javax.swing.GroupLayout ContainerConfigGNS3TabLayout = new javax.swing.GroupLayout(ContainerConfigGNS3Tab);
        ContainerConfigGNS3Tab.setLayout(ContainerConfigGNS3TabLayout);
        ContainerConfigGNS3TabLayout.setHorizontalGroup(
            ContainerConfigGNS3TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerConfigGNS3TabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ContainerConfigGNS3TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ThumbStopLabel)
                    .addComponent(ThumbCommandLabel)
                    .addComponent(ThumbVolumeLabel)
                    .addComponent(HideLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ContainerConfigGNS3TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ThumbStopTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThumbVolumeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThumbCommandTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HideCheckbox))
                .addContainerGap(236, Short.MAX_VALUE))
        );
        ContainerConfigGNS3TabLayout.setVerticalGroup(
            ContainerConfigGNS3TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerConfigGNS3TabLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(ContainerConfigGNS3TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ThumbVolumeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThumbVolumeLabel))
                .addGap(18, 18, 18)
                .addGroup(ContainerConfigGNS3TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ThumbCommandTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThumbCommandLabel))
                .addGap(18, 18, 18)
                .addGroup(ContainerConfigGNS3TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ThumbStopTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThumbStopLabel))
                .addGap(18, 18, 18)
                .addGroup(ContainerConfigGNS3TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(HideLabel)
                    .addComponent(HideCheckbox))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        containerTabPane.addTab("GNS3", ContainerConfigGNS3Tab);

        ContainerConfigUpdateButton.setText("Confirm");
        ContainerConfigUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContainerConfigUpdateButtonActionPerformed(evt);
            }
        });

        ContainerConfigCancelButton.setText("Cancel");
        ContainerConfigCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContainerConfigCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ContainerConfigWindowLayout = new javax.swing.GroupLayout(ContainerConfigWindow.getContentPane());
        ContainerConfigWindow.getContentPane().setLayout(ContainerConfigWindowLayout);
        ContainerConfigWindowLayout.setHorizontalGroup(
            ContainerConfigWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerConfigWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ContainerConfigWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(containerTabPane)
                    .addGroup(ContainerConfigWindowLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ContainerConfigUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ContainerConfigCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        ContainerConfigWindowLayout.setVerticalGroup(
            ContainerConfigWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ContainerConfigWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(containerTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(ContainerConfigWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ContainerConfigUpdateButton)
                    .addComponent(ContainerConfigCancelButton))
                .addGap(10, 10, 10))
        );

        renameContainerOption.setText("rename");
        renameContainerOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renameContainerOptionActionPerformed(evt);
            }
        });
        ContainerRightClick.add(renameContainerOption);
        ContainerRightClick.add(jSeparator1);

        deleteContainerOption.setText("delete");
        deleteContainerOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteContainerOptionActionPerformed(evt);
            }
        });
        ContainerRightClick.add(deleteContainerOption);

        javax.swing.GroupLayout DockerfileEditorDialogLayout = new javax.swing.GroupLayout(DockerfileEditorDialog.getContentPane());
        DockerfileEditorDialog.getContentPane().setLayout(DockerfileEditorDialogLayout);
        DockerfileEditorDialogLayout.setHorizontalGroup(
            DockerfileEditorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        DockerfileEditorDialogLayout.setVerticalGroup(
            DockerfileEditorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setMaximumSize(new java.awt.Dimension(340, 50));
        setPreferredSize(new java.awt.Dimension(340, 50));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        ContainerLabelName.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        ContainerLabelName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ContainerLabelName.setText("container_name");
        add(ContainerLabelName);

        RenameContainerTextfield.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        RenameContainerTextfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        RenameContainerTextfield.setMinimumSize(new java.awt.Dimension(300, 35));
        RenameContainerTextfield.setName(""); // NOI18N
        RenameContainerTextfield.setPreferredSize(new java.awt.Dimension(300, 35));
        RenameContainerTextfield.setRequestFocusEnabled(false);
        RenameContainerTextfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RenameContainerTextfieldFocusLost(evt);
            }
        });
        RenameContainerTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RenameContainerTextfieldActionPerformed(evt);
            }
        });
        add(RenameContainerTextfield);
    }// </editor-fold>//GEN-END:initComponents

private boolean clicked = false;
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
            if(!clicked){
                //System.out.println("Container Clicked!");
                if(SwingUtilities.isLeftMouseButton(evt)){
                    clicked = true;
                    loadDataIntoContainerPanel(); 
                    ContainerConfigWindow.setVisible(true);  
                }
                else if(SwingUtilities.isRightMouseButton(evt)){
                    ContainerRightClick.show(this, evt.getX(), evt.getY());
                }

            }
    }//GEN-LAST:event_formMouseClicked

    private boolean outsideRenameTextfield = true;
    private void renameContainerOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renameContainerOptionActionPerformed
        // Make the rename textfield visible, active, and all text inside preselected
        RenameContainerTextfield.setText(this.data.name);
        RenameContainerTextfield.setVisible(true);
        RenameContainerTextfield.requestFocusInWindow();
        RenameContainerTextfield.selectAll();
        
        // Hide the original container label
        ContainerLabelName.setVisible(false);
    }//GEN-LAST:event_renameContainerOptionActionPerformed

    private void deleteContainerOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteContainerOptionActionPerformed
       int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the container '"+this.data.name+"'?", "Delete Container",  JOptionPane.YES_NO_OPTION);
       if (confirm == JOptionPane.YES_OPTION){
           JPanel containerPanel = (JPanel)this.getParent();
       
           // delete the container from the list
           containerPanel.remove(this);

           // Shorten the panel height holding all the containers and resize it.
           mainWindow.containerPanePanelLength-=50;
           containerPanel.setPreferredSize(new Dimension(0,mainWindow.containerPanePanelLength));

           // Redraw the panel containing the list of containers
           containerPanel.revalidate();
           containerPanel.repaint(); 
           
           //delete the container in the lab directory
           deleteContainer();
       }
    }//GEN-LAST:event_deleteContainerOptionActionPerformed

    // Deletes the container in the lab directory structure by calling 'new_lab_setup.py -d containername'
    private void deleteContainer(){
        try{
                //call python new_lab_script: new_lab_setup.py -b basename
                String cmd = "./removeContainer.sh "+mainWindow.labsPath+" "+mainWindow.labName+" "+this.data.name;
                System.out.println(cmd);
                Process pr = Runtime.getRuntime().exec(cmd);
            
                BufferedReader reader = new BufferedReader(new InputStreamReader(pr.getInputStream()));
                String line;
                while((line = reader.readLine()) != null){
                    System.out.println(line);
                }
                reader.close();
            } 
            catch (IOException e){
                System.out.println(e);
            }
    }

    private void RenameContainerTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RenameContainerTextfieldActionPerformed
        // Prompt user to confirm their changes
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to rename the container '"+this.data.name+"' to '"+RenameContainerTextfield.getText()+"'?", "Rename Container",  JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION){
            // Rename the container in directory
            renameContainer(this.data.name,RenameContainerTextfield.getText());
            
            // Rename the container in GUI and data object
            System.out.println("Renaming '"+this.data.name+"'"+"container to: "+RenameContainerTextfield.getText());
            ContainerLabelName.setText(RenameContainerTextfield.getText()); 
            this.data.name = RenameContainerTextfield.getText();
        }
        
        // hide the textfield and show the container label
        RenameContainerTextfield.setVisible(false);
        ContainerLabelName.setVisible(true);

    }//GEN-LAST:event_RenameContainerTextfieldActionPerformed

    // Renames the container in the lab directory structure by calling 'new_lab_setup.py -r oldName newName'
    private void renameContainer(String oldName, String newName){
        try{
                //call python new_lab_script: new_lab_setup.py -b basename
                String cmd = "./renameContainer.sh "+mainWindow.labsPath+" "+mainWindow.labName+" "+oldName+" "+newName;
                System.out.println(cmd);
                Process pr = Runtime.getRuntime().exec(cmd);
            
                BufferedReader reader = new BufferedReader(new InputStreamReader(pr.getInputStream()));
                String line;
                while((line = reader.readLine()) != null){
                    System.out.println(line);
                }
                reader.close();
            } 
            catch (IOException e){
                System.out.println(e);
            }
    }
    
    private void RenameContainerTextfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RenameContainerTextfieldFocusLost
        // hide the textfield and show the container label
        RenameContainerTextfield.setVisible(false);
        ContainerLabelName.setVisible(true);
    }//GEN-LAST:event_RenameContainerTextfieldFocusLost

    private void ContainerConfigWindowWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ContainerConfigWindowWindowClosing
        //System.out.println("Closing Config for: " + this.data.name);
        closeConfigWindow();
    }//GEN-LAST:event_ContainerConfigWindowWindowClosing

    private void ContainerConfigUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContainerConfigUpdateButtonActionPerformed
    //Update the data 

        // General Tab
        data.user = UserTF.getText();
        data.password = PasswordTF.getText();
        data.terminal_count = (int)TerminalQuantitySpinner.getValue();
        data.terminal_group = TerminalGroupTextfield.getText();
        data.lab_gateway = LabGatewayTextfield.getText();
        data.no_gw = NoGWCheckbox.isSelected();
            
        // List of Networks
//        data.listOfContainerNetworks.clear(); //clear the networks so that is can be refilled with updated list of networks
//        Component[] networkPanels = ContainerConfigNetworksPanel.getComponents();
//        for(Component component: networkPanels){
//            ContainerConfigNetworksSubpanel networkPanel = (ContainerConfigNetworksSubpanel)component;
//            
//            String networkName = (String)networkPanel.getNetworkNameCombobox().getSelectedItem();
//            String ipAddr = networkPanel.getIPTextField().getText();
//            data.listOfContainerNetworks.add(new LabData.ContainerNetworkSubData(networkName,ipAddr));
//        }
                


        // Docker
        data.script = ScriptTextfield.getText();
        data.registry = RegistryTextfield.getText();
        data.base_registry = BaseRegistryTextfield.getText();    
        data.publish = PublishTextfield.getText();
        data.no_privilege = NoPrivilegeCheckbox.isSelected();
                
//        

//        // Hosts
//            // list of add-hosts
//        for(int i=0;i<data.listOfContainerAddHost.size();i++){
//            addAddHostSubPanel(data.listOfContainerAddHost.get(i).type,        data.listOfContainerAddHost.get(i).add_host_host, 
//                               data.listOfContainerAddHost.get(i).add_host_ip, data.listOfContainerAddHost.get(i).add_host_network);
//        }
//        
        // Other
        data.xterm_title = XtermTitleTextfield.getText();
        data.xterm_script = XtermScriptTextfield.getText();
        data.clone = (int)(ClonesSpinner.getValue());
        data.x11 = X11Checkbox.isSelected();
        data.no_pull = NoPullCheckbox.isSelected();    
        data.mystuff = MyStuffCheckbox.isSelected(); 
        data.tap = TapRadioButton.isSelected();
        data.mount1 = MountTextfield1.getText();       
        data.mount2 = MountTextfield2.getText();      
//        
        // GNS3
        data.thumb_command = ThumbCommandTextfield.getText();    
        data.thumb_stop = ThumbStopTextfield.getText();           
        data.thumb_volume = ThumbVolumeTextfield.getText();           
        data.hide = HideCheckbox.isSelected();
        
        closeConfigWindow();
    }//GEN-LAST:event_ContainerConfigUpdateButtonActionPerformed

    private void ContainerConfigCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContainerConfigCancelButtonActionPerformed
        closeConfigWindow();
    }//GEN-LAST:event_ContainerConfigCancelButtonActionPerformed
    
    private void closeConfigWindow(){
        ContainerConfigWindow.setVisible(false);
        clearLists();
        clicked = false;
    }
    
    private void clearLists(){
        // Clear Add-host
        Component[] componentList = AddHostsSubPanel.getComponents();
        for(Component c: componentList)
            AddHostsSubPanel.remove(c);
        
        containerAddHostPanelLength=0;
        AddHostsSubPanel.setPreferredSize(new Dimension(0,containerAddHostPanelLength));
        
        // Clear network
        componentList = ContainerConfigNetworksPanel.getComponents();
        for(Component c: componentList)
            ContainerConfigNetworksPanel.remove(c);
        
        containerConfigNetworksPanelLength=0;
        ContainerConfigNetworksPanel.setPreferredSize(new Dimension(0,containerConfigNetworksPanelLength));
    }
        
    public int containerConfigNetworksPanelLength = 0;
    private final JScrollBar containerConfigNetworksScrollPaneBar;   
    private void addContainerNetworkSubPanel(String network, String ip){
         //Resize the JPanel Holding all the containerConfigNetworksPanel to fit another containerConfigNetworksPanel 
        //(makes the scroll bar resize and should show all objects listed)
        containerConfigNetworksPanelLength+=58;
        ContainerConfigNetworksPanel.setPreferredSize(new Dimension(0,containerConfigNetworksPanelLength));

        // Create the Container Obj Panel and add it
        ContainerConfigNetworksSubpanel newContainerConfigNetwork = new ContainerConfigNetworksSubpanel(this, mainWindow.labDataCurrent, network, ip);
        ContainerConfigNetworksPanel.add(newContainerConfigNetwork);

        // Redraw GUI with the new Panel
        ContainerConfigNetworksPanel.revalidate();
        ContainerConfigNetworksPanel.repaint();
        
        //Lower the Scroll Bar to show the newly added container
        containerConfigNetworksScrollPaneBar.setValue(58+containerConfigNetworksScrollPaneBar.getMaximum());
    }
    
    private void EditDockerfileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditDockerfileButtonActionPerformed
        editDockerfile();
    }//GEN-LAST:event_EditDockerfileButtonActionPerformed

    private void ContainerConfigNetworksAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContainerConfigNetworksAddButtonActionPerformed
         addContainerNetworkSubPanel("", "");
    }//GEN-LAST:event_ContainerConfigNetworksAddButtonActionPerformed

    private void ContainerConfigAddHostIPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContainerConfigAddHostIPButtonActionPerformed
        addAddHostSubPanel("ip","","","");
    }//GEN-LAST:event_ContainerConfigAddHostIPButtonActionPerformed

    private void ContainerConfigAddHostNetworkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContainerConfigAddHostNetworkButtonActionPerformed
        addAddHostSubPanel("network","","","");
    }//GEN-LAST:event_ContainerConfigAddHostNetworkButtonActionPerformed
    
    private void editDockerfile(){
        try{
            //call python new_lab_script: new_lab_setup.py -b basename
            String dockerfilePath = mainWindow.currentLab.getPath()+File.separator+"dockerfiles"+File.separator+
                                    "Dockerfile."+mainWindow.labName+"."+this.data.name+".student";
            //System.out.println(new File(dockerfilePath).isFile());
            //System.out.println(dockerfilePath);
            //System.out.println("Editing: "+mainWindow.textEditorPref);
            String cmd = "./editDockerfile.sh "+mainWindow.textEditorPref+" "+dockerfilePath;
            Process pr = Runtime.getRuntime().exec(cmd);

            BufferedReader reader = new BufferedReader(new InputStreamReader(pr.getInputStream()));
            String line;
            while((line = reader.readLine()) != null){
                System.out.println(line);
            }
            reader.close();
        } 
        catch (IOException e){
            System.out.println(e);
        }
    }
    
    public int containerAddHostPanelLength = 0;
    private final JScrollBar containerAddHostScrollPaneBar;   
    private void addAddHostSubPanel(String type, String host, String ip, String network){
         //Resize the JPanel Holding all the containerAddHostsPanel to fit another containerAddHostsPanel 
        //(makes the scroll bar resize and should show all objects listed)
        containerAddHostPanelLength+=63;
        AddHostsSubPanel.setPreferredSize(new Dimension(0,containerAddHostPanelLength));

        // Create the Container Obj Panel and add it
        ContainerConfigAddHosts newContainerConfigAddHost = new ContainerConfigAddHosts(this, mainWindow.labDataCurrent, type, host, ip, network);
        AddHostsSubPanel.add(newContainerConfigAddHost);

        // Redraw GUI with the new Panel
        AddHostsSubPanel.revalidate();
        AddHostsSubPanel.repaint();
        
        //Lower the Scroll Bar to show the newly added container
        containerAddHostScrollPaneBar.setValue(58+containerAddHostScrollPaneBar.getMaximum());
    }
    
    
    public LabData.ContainerData getConfigData(){
        return this.data;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddHostLabel3;
    private javax.swing.JScrollPane AddHostsScrollPane;
    private javax.swing.JPanel AddHostsSubPanel;
    private javax.swing.JTextField BaseRegistryTextfield;
    private javax.swing.JSpinner ClonesSpinner;
    private javax.swing.JButton ContainerConfigAddHostIPButton;
    private javax.swing.JButton ContainerConfigAddHostNetworkButton;
    private javax.swing.JButton ContainerConfigCancelButton;
    private javax.swing.JPanel ContainerConfigDockerTab;
    private javax.swing.JPanel ContainerConfigGNS3Tab;
    private javax.swing.JPanel ContainerConfigGeneralTab;
    private javax.swing.JPanel ContainerConfigNetworkTab;
    private javax.swing.JButton ContainerConfigNetworksAddButton;
    private javax.swing.JPanel ContainerConfigNetworksPanel;
    private javax.swing.JScrollPane ContainerConfigNetworksScrollpane;
    private javax.swing.JPanel ContainerConfigOtherTab;
    private javax.swing.JButton ContainerConfigUpdateButton;
    private javax.swing.JDialog ContainerConfigWindow;
    private javax.swing.JLabel ContainerLabelName;
    private javax.swing.JPopupMenu ContainerRightClick;
    private javax.swing.JDialog DockerfileEditorDialog;
    private javax.swing.JButton EditDockerfileButton;
    private javax.swing.JCheckBox HideCheckbox;
    private javax.swing.JLabel HideLabel;
    private javax.swing.JTextField LabGatewayTextfield;
    private javax.swing.JTextField MountTextfield1;
    private javax.swing.JTextField MountTextfield2;
    private javax.swing.JCheckBox MyStuffCheckbox;
    private javax.swing.JCheckBox NoGWCheckbox;
    private javax.swing.JCheckBox NoPrivilegeCheckbox;
    private javax.swing.JCheckBox NoPullCheckbox;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JTextField PasswordTF;
    private javax.swing.JTextField PublishTextfield;
    private javax.swing.JTextField RegistryTextfield;
    private javax.swing.JTextField RenameContainerTextfield;
    private javax.swing.JTextField ScriptTextfield;
    private javax.swing.JRadioButton TapRadioButton;
    private javax.swing.JLabel TerminalCountLabel;
    private javax.swing.JTextField TerminalGroupTextfield;
    private javax.swing.JSpinner TerminalQuantitySpinner;
    private javax.swing.JLabel ThumbCommandLabel;
    private javax.swing.JTextField ThumbCommandTextfield;
    private javax.swing.JLabel ThumbStopLabel;
    private javax.swing.JTextField ThumbStopTextfield;
    private javax.swing.JLabel ThumbVolumeLabel;
    private javax.swing.JTextField ThumbVolumeTextfield;
    private javax.swing.JLabel UserLabel;
    private javax.swing.JTextField UserTF;
    private javax.swing.JCheckBox X11Checkbox;
    private javax.swing.JTextField XtermScriptTextfield;
    private javax.swing.JTextField XtermTitleTextfield;
    private javax.swing.JTabbedPane containerTabPane;
    private javax.swing.JMenuItem deleteContainerOption;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem renameContainerOption;
    // End of variables declaration//GEN-END:variables
}
