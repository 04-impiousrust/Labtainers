/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package labtainers.mainui;

import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.JPanel;

/**
 *
 * @author Daniel Liao
 */
public class ContainerConfigNetworksSubpanel extends javax.swing.JPanel {

    /**
     * Creates new form ContainerConfigNetworksSubpanel
     */
    private final ContainerObjPanel parent;
    private LabData data;
    public ContainerConfigNetworksSubpanel(ContainerObjPanel parent, LabData data, String network, String ip) {
        initComponents();
        this.parent = parent;
        this.data = data; 
        //Fill the combobox with the current list of Networks
        for(int i = 0;i<data.getNetworks().size();i++){
            this.ContainerConfigNetworksNameCombobox.addItem(data.getNetworks().get(i).name);
        } 
        // Set fields
        this.ContainerConfigNetworksNameCombobox.setSelectedItem(network);  
        if (ip.trim().length() == 0){
            int index = 0;
            if(network.trim().length() != 0 && ip.trim().length() == 0){
                index = ContainerConfigNetworksNameCombobox.getSelectedIndex();
            }   
            String subnet = data.getNetworks().get(index).mask;
            String ip_part = subnet.split("/")[0];
            ip = ip_part;
        }
        this.ContainerConfigNetworksIPTextfield.setText(ip);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ContainerConfigNetworksNameCombobox = new javax.swing.JComboBox<>();
        ContainerConfigNetworksIPTextfield = new javax.swing.JTextField();
        ContainerConfigNetworksDeleteButton = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setMaximumSize(new java.awt.Dimension(543, 53));
        setMinimumSize(new java.awt.Dimension(543, 53));
        setPreferredSize(new java.awt.Dimension(543, 53));

        ContainerConfigNetworksNameCombobox.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ContainerConfigNetworksNameCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContainerConfigNetworksNameComboboxActionPerformed(evt);
            }
        });

        ContainerConfigNetworksIPTextfield.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        ContainerConfigNetworksDeleteButton.setText("Delete");
        ContainerConfigNetworksDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContainerConfigNetworksDeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(ContainerConfigNetworksNameCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ContainerConfigNetworksIPTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ContainerConfigNetworksDeleteButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ContainerConfigNetworksDeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(ContainerConfigNetworksIPTextfield))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(ContainerConfigNetworksNameCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ContainerConfigNetworksDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContainerConfigNetworksDeleteButtonActionPerformed
        remove();
    }//GEN-LAST:event_ContainerConfigNetworksDeleteButtonActionPerformed

    private void ContainerConfigNetworksNameComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContainerConfigNetworksNameComboboxActionPerformed
        int index = ContainerConfigNetworksNameCombobox.getSelectedIndex();
        String subnet = this.data.getNetworks().get(index).mask;
        String ip_part = subnet.split("/")[0];
        this.ContainerConfigNetworksIPTextfield.setText(ip_part);
    }//GEN-LAST:event_ContainerConfigNetworksNameComboboxActionPerformed

    // MANIPULATION //
    
    // Deletes this object 
    protected void remove(){
       JPanel containerConfigNetworksPanel = (JPanel)this.getParent();
       // Delete the container from the list
       containerConfigNetworksPanel.remove(this);

       // Shorten the panel height holding all the containers and resize it.
       parent.containerConfigNetworksPanelLength-=53;
       containerConfigNetworksPanel.setPreferredSize(new Dimension(0,parent.containerConfigNetworksPanelLength));

       // Redraw the panel containing the list of containers
       containerConfigNetworksPanel.revalidate();
       containerConfigNetworksPanel.repaint(); 
    }
    
    // Adds a network into the combobox
    protected void addNetworkToComboBox(String newNetworkName){
        ContainerConfigNetworksNameCombobox.addItem(newNetworkName);
    }
    
    // Deletes a network from the combobox
    protected void deleteNetworkInComboBox(String deletedNetwork){
         ContainerConfigNetworksNameCombobox.removeItem(deletedNetwork);
    }
    
    // Updates the combobox list with the renamed network
    protected void renameNetworkToComboBox(String oldNetwork, String newNetwork){
        boolean updateSelectedItem = ContainerConfigNetworksNameCombobox.getSelectedItem().equals(oldNetwork);
        ArrayList<String> tmp = new ArrayList<String>();
        
        //Create new list to set as the combobox items
        for(int i=0;i<ContainerConfigNetworksNameCombobox.getItemCount();i++){
            if(ContainerConfigNetworksNameCombobox.getItemAt(i).equals(oldNetwork))
                tmp.add(newNetwork);
            else
                tmp.add(ContainerConfigNetworksNameCombobox.getItemAt(i));
        }
        
        // Empty the combobox items
        ContainerConfigNetworksNameCombobox.removeAllItems();
        
        // Fill the combobox with updated list of items
        for(int i=0;i<tmp.size();i++)
            ContainerConfigNetworksNameCombobox.addItem(tmp.get(i));
        
        // Set the selected item if the selected network was renamed
        if(updateSelectedItem)
            ContainerConfigNetworksNameCombobox.setSelectedItem(newNetwork);
    }
    
    // GETTERS //
    
    public String getNetwork(){
        return (String)(ContainerConfigNetworksNameCombobox.getSelectedItem());
    }
    
    public String getIP(){
        return ContainerConfigNetworksIPTextfield.getText();
    }
    
    public javax.swing.JComboBox<String> getNetworkComboBox(){
        return ContainerConfigNetworksNameCombobox;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ContainerConfigNetworksDeleteButton;
    private javax.swing.JTextField ContainerConfigNetworksIPTextfield;
    private javax.swing.JComboBox<String> ContainerConfigNetworksNameCombobox;
    // End of variables declaration//GEN-END:variables
}
