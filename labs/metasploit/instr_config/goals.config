# goals.config
# 
# Please see the Labtainer Lab Designer User Guide

# Penetrate Test - Vulnerably configured rlogin service (port 513)
# Ran nmap and confirm rlogin (port 513) is open
_rlogin = matchany : string_equal : rlogin_open : answer=open
# Used rlogin to view the root file
_rloginview = matchany : string_equal : rloginfileview : parameter.FSTRING
# GROUP: Ran nmap and used rlogin to achieve root privilege and view root file
rlogin_ok = time_before : _rlogin : _rloginview

# Penetrate Test - Vulnerable ingreslock service (port 1524)
# Ran nmap and confirm ingreslock (port 1524) is open
_ingreslock = matchany : string_equal : ingreslock_open : answer=open
# Used telnet to view the root file
_ingreslockview = matchany : string_equal : ingreslockfileview : parameter.FSTRING
# GROUP: Ran nmap and used telnet (to ingreslock service) to achieve root privilege and view root file
ingreslock_ok = time_before : _ingreslock : _ingreslockview

# Penetrate Test - Vulnerable distccd service (port 3632)
# Ran nmap and confirm distccd (port 3632) is open
_distccd = matchany : string_equal : distccd_open : answer=open
# Used msfconsole to view the root file
_distccdview = matchany : string_equal : distccdfileview : parameter.FSTRING
# Using exploit exploit/unix/misc/distcc_exec
_use_distccd = is_true : _distccd_exploit
_nmapdistccd_ok = time_before : _distccd : _distccdview
# GROUP: Ran nmap and used msfconsole (use distccd exploit) to achieve root privilege and view root file
distccd_ok = time_before : _distccdview : _use_distccd

# Penetrate Test - Vulnerable IRC daemon (port 6667)
# Ran nmap and confirm irc (port 6667) is open
_irc = matchany : string_equal : irc_open : answer=open
# Used msfconsole to view the root file
_ircview = matchany : string_equal : ircfileview : parameter.FSTRING
# Using exploit exploit/unix/irc/unreal_ircd_3281_backdoor
_use_irc = is_true : _irc_exploit
_nmapirc_ok = time_before : _irc : _ircview
# GROUP: Ran nmap and used msfconsole (use ircd exploit) to achieve root privilege and view root file
irc_ok = time_before : _ircview : _use_irc

# Penetrate Test - Vulnerable VSFtpd service (port 21)
# Ran nmap and confirm vsftpd (port 21) is open
_vsftpd = matchany : string_equal : vsftpd_open : answer=open
# Used msfconsole to view the root file
_vsftpdview = matchany : string_equal : vsftpdfileview : parameter.FSTRING
# Using exploit exploit/unix/ftp/vsftpd_234_backdoor
_use_vsftpd = is_true : _vsftpd_exploit
_nmapvsftpd_ok = time_before : _vsftpd : _vsftpdview
# GROUP: Ran nmap and used msfconsole (use vsftpd exploit) to achieve root privilege and view root file
vsftpd_ok = time_before : _vsftpdview : _use_vsftpd

# Penetrate Test - Vulnerable Samba service (port 139)
# Ran nmap and confirm samba (port 139) is open
_samba = matchany : string_equal : samba_open : answer=open
# Used msfconsole to view the root file
_sambaview = matchany : string_equal : sambafileview : parameter.FSTRING
# Using exploit exploit/multi/samba/usermap_script
_use_samba = is_true : _samba_exploit
_nmapsamba_ok = time_before : _samba : _sambaview
# GROUP: Ran nmap and used msfconsole (use samba exploit) to achieve root privilege and view root file
samba_ok = time_before : _sambaview : _use_samba

# Penetrate Test - Vulnerable HTTP (php) service (port 80)
# Ran nmap and confirm HTTP (php) (port 80) is open
_httpphp = matchany : string_equal : httpphp_open : answer=open
# Used msfconsole to view the root file
_httpphpview = matchany : string_equal : httpphpfileview : parameter.FSTRING
# Using exploit exploit/multi/http/php_cgi_arg_injection
_use_httpphp = is_true : _httpphp_exploit
_nmaphttpphp_ok = time_before : _httpphp : _httpphpview
# GROUP: Ran nmap and used msfconsole (use HTTP PHP exploit) to achieve root privilege and view root file
httpphp_ok = time_before : _httpphpview : _use_httpphp

# Penetrate Test - Vulnerable PostGres service (port 5432)
# Ran nmap and confirm Postgres (port 5432) is open
_postgres = matchany : string_equal : postgres_open : answer=open
# Used msfconsole to view the root file
_postgresview = matchany : string_equal : postgresfileview : parameter.FSTRING
# Using exploit exploit/linux/postgres/postgres_payload
_use_postgres = is_true : _postgres_exploit
_nmappostgres_ok = time_before : _postgres : _postgresview
# GROUP: Ran nmap and used msfconsole (use Postgres exploit) to achieve root privilege and view root file
postgres_ok = time_before : _postgresview : _use_postgres

