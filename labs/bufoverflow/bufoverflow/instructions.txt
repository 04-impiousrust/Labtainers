Title: Buffer Overflow Vulnerability Lab Exercise

1. Background

This Labtainer exercise explores stack based
buffer overflow vulnerabilities.  It is derived from 
the lab described in Buffer_Overflow.pdf found at
www.cis.syr.edu/~wedu/seed/software_security.html

These lab instructions augment that Buffer_Overflow.pdf
manual.  Perform the tasks describe in these instructions
and refer to that manual and other resources, e.g., course
notes and lectures, to learn about buffer overflow 
vulnerabilities.

2. Performing the lab
The lab is started from the Labtainer working 
directory on your Docker-enabled host, e.g., a Linux VM.
From there, issue the command:

    ./start.sh bufoverflow

The resulting virtual terminals will include a display of
these instructions, and a bash shell.  The programs
described in Buffer_Overflow.pdf will be in your home directory.

To navigate this instruction, the arrow keys along with 
with the Space/Home/End/Page-Up/Page-Down keys are usable.
To exit navigation of this instruction, type 'q'.

3. Tasks

a) Ensure that Address Space Layout Randomization (ASLR) is disabled:

      sudo sysctl -w kernel.randomize_va_space=0

b) Perform Task 1 per the Buffer_Overflow.pdf, but while in the
   root shell, display the content of /root/.secret:

       cat /root/.secret

c) Perform Task 2, using the whilebash.sh script instead of
   the shell command line. Use the following to enable ASLR:

      sudo sysctl -w kernel.randomize_va_space=2

d) Explore the remaining tasks in Buffer_Overflow.pdf


4. Stop the Labtainer

When the lab is completed, or you'd like to stop working for a while, run

    ./stop.sh bufoverflow

from the host Labtainer working directory.  You can always restart the
Labtainer to continue your work.  When the Labtainer is stopped, a
zip file is created and copied to a location displayed by the stop.sh
command.  When the lab is completed, send that zip file to the instructor.


